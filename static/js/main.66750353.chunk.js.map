{"version":3,"sources":["Button.js","index.js"],"names":["Button","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","props","light","onClick","React","Component","Random","_this","call","state","color","handleClick","bind","assertThisInitialized","applyColor","prevProps","prevState","ary","join","reduce","b","formatColor","document","body","style","background","random","i","push","Math","floor","setState","chooseColor","isLight","Button_Button","ReactDOM","render","src_Random","getElementById"],"mappings":"8KAEaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEE,OACCC,EAAAC,EAAAC,cAAA,UACCC,UAAYZ,KAAKa,MAAMC,MAAQ,eAAiB,cAAgBC,QAASf,KAAKa,MAAME,SADrF,eAHHnB,EAAA,CAA4BoB,IAAMC,WCE5BC,cAEJ,SAAAA,EAAYL,GAAM,IAAAM,EAAA,OAAArB,OAAAC,EAAA,EAAAD,CAAAE,KAAAkB,IAChBC,EAAArB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoB,GAAAE,KAAApB,KAAMa,KACDQ,MAAQ,CACZC,MAAM,CAAC,IAAI,EAAE,IAEdH,EAAKI,YAAYJ,EAAKI,YAAYC,KAAjB1B,OAAA2B,EAAA,EAAA3B,CAAAqB,IALDA,mFAShBnB,KAAK0B,wDAGYC,EAAWC,GAC5B5B,KAAK0B,iDAGKG,GACV,MAAO,OAASA,EAAIC,KAAK,MAAQ,sCAKjC,OADY9B,KAAKqB,MAAMC,MACZS,OAAO,SAACrB,EAAEsB,GAAH,OAAStB,EAAEsB,IAAK,yCAIlC,IAAMV,EAAQtB,KAAKiC,YAAYjC,KAAKqB,MAAMC,OAC1CY,SAASC,KAAKC,MAAMC,WAAaf,wCAKjC,IADA,IAAMgB,EAAS,GACNC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAOE,KAAKC,KAAKC,MAAoB,IAAdD,KAAKH,WAE9B,OAAOA,wCAIPtC,KAAK2C,SAAS,CACZrB,MAAOtB,KAAK4C,iDAKd,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAWZ,KAAK6C,UAAY,QAAU,SAA1C,iBACW7C,KAAKiC,YAAYjC,KAAKqB,MAAMC,OADvC,KAGAb,EAAAC,EAAAC,cAACmC,EAAD,CAAQhC,MAAOd,KAAK6C,UAAW9B,QAASf,KAAKuB,sBApDhCP,IAAMC,WA0D3B8B,IAASC,OACPvC,EAAAC,EAAAC,cAACsC,EAAD,MACAf,SAASgB,eAAe","file":"static/js/main.66750353.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Button extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button \r\n\t\t\t\tclassName={ this.props.light ? 'light-button' : 'dark-button' } onClick={this.props.onClick}>\r\n\t\t\t\tRefresh\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Button } from './Button';\r\n\r\nclass Random extends React.Component {\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n     color:[255,0,0] \r\n    }\r\n    this.handleClick=this.handleClick.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.applyColor();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.applyColor();\r\n  }\r\n\r\n  formatColor(ary) {\r\n    return 'rgb(' + ary.join(', ') + ')';\r\n  }\r\n\r\n  isLight() {\r\n    const rgb = this.state.color;\r\n    return rgb.reduce((a,b) => a+b) < 127 * 3;\r\n  }\r\n\r\n  applyColor() {\r\n    const color = this.formatColor(this.state.color);\r\n    document.body.style.background = color;\r\n  }\r\n\r\n  chooseColor() {\r\n    const random = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      random.push(Math.floor(Math.random()*256));\r\n    }\r\n    return random;\r\n  }\r\n  \r\n  handleClick(){\r\n    this.setState({\r\n      color: this.chooseColor()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className={this.isLight() ? 'white' : 'black'}>\r\n\t\t\t\tYour color is {this.formatColor(this.state.color)}.\r\n        </h1>\r\n        <Button light={this.isLight()} onClick={this.handleClick} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Random />, \r\n  document.getElementById('app')\r\n);"],"sourceRoot":""}